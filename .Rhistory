1:4+2:3
class(1:4+2:3)
data<-read.csv('hw1_data.csv')
names(data)
data['Ozone']
table(data['Ozone'])
table(is.na(data['Ozone']))
data['Ozone'][47]
data['Ozone'][47,]
good_ozone<-complete.cases(data['Ozone'])
good_ozone
avg(data['Ozone'][good_ozone]
)
mean(data['Ozone'][good_ozone])
Ozone
ozone<-data['Ozone']
ozone
mean(Ozone[good_ozone])
mean(ozone[good_ozone])
mean(ozone[t(good_ozone)])
sub<-data[Ozone>31; Temp>90]
sub<-data[Ozone>31]
sub<-data["Ozone">31]
sub2<-sub['Temp'>90]
mean(sub2['Solar.R'])
sub2
sub3<-data[(data$Ozone>31) & (data$Temp>90)]
sub3<-data[(data$Ozone>31) & (data$Temp>90),]
sub3
good<-complete.cases(sub3)
mean(data$Solar.R[good])
good<-complete.cases(sub3$Solar.R)
mean(data$Solar.R[good])
good
data$Solar.R[good]
sub3$Solar.R[good]
mean(sub3$Solar.R[good])
sub4<-data[data$month==6,)
sub4<-data[data$month==6,]
gdtmp<-complete.cases(sub4$Temp)
mean(sub4$Temp[gdtmp])
sub4$Temp
sub4
sub4<-data[data$Month==6,]
gdtmp<-complete.cases(sub4$Temp)
mean(sub4$Temp[gdtmp])
sub5<-data[data$Month==5]
sub5<-data[data$Month==5,]
gdoz<-complete.cases(sub5$Ozone)
mean(sub5$Ozone[gdoz])
max(sub5$Ozone[gdoz])
View(sub3)
setwd("~/repdata/RepData_PeerAssessment1")
intervals<-dimnames(table(comp_data$interval))[[1]]
avg_steps<-c()
for (i in intervals){
tempdf<-comp_data[comp_data$interval==i,]
s<-mean(tempdf$steps)
avg_steps<-c(avg_steps,s)
}
data<-read.csv(unz("activity.zip","activity.csv"))
comp_data_bool<-complete.cases(data)
comp_data<-data[comp_data_bool,]
intervals<-dimnames(table(comp_data$interval))[[1]]
avg_steps<-c()
for (i in intervals){
tempdf<-comp_data[comp_data$interval==i,]
s<-mean(tempdf$steps)
avg_steps<-c(avg_steps,s)
}
View(avg_steps)
max_avg<-max(avg_steps)
max_int<-match(max_avg,avg_steps)
attributes(comp_data)
row.names(data)
length(row.names(data))
View(data)
for (s in 1:length(data$steps)){
if is.na(data$steps[s]){
new.steps[s]<-avg_steps[s]
}
else{
new.steps[s]<-data$steps[s]
}
}
new.steps<-c()
new.date<-data$date
new.interval<-data$interval
for (s in 1:length(data$steps)){
if is.na(data$steps[s]){
new.steps[s]<-avg_steps[s]
}
else{
new.steps[s]<-data$steps[s]
}
}
for (s in 1:length(data$steps)) {
if is.na(data$steps[s]){
new.steps[s]<-avg_steps[s]
}
else {
new.steps[s]<-data$steps[s]
}
}
is.na?
?
sad
?is.na
if is.na(data$steps[s]) {
new.steps[s]<-avg_steps[s]
}
data$steps
class(data$steps)
for s in data$steps { is.na(s)}
for (s in data$steps) { is.na(s)}
s
for (s in data$steps) { print(is.na(s))}
?match
new.steps<-c()
new.date<-data$date
new.interval<-data$interval
for (s in data$steps) {
if is.na(s) {
new.steps<-c(new.steps,avg_steps[match(s,data$steps)])
}
else {
new.steps<-c(new.steps,s)
}
}
all.days<-dimnames(table(new.data$date))[[1]]
new.totals<-c()
for (d in all.days){
tempdf<-new.data[new.data$date==d,]
s<-sum(tempdf$steps)
new.totals<-c(new.totals,s)
}
#...and mean and median!
new.tot_mean<-mean(new.totals)
new.tot_median<-median(new.totals)
new.steps<-c()
new.date<-data$date
new.interval<-data$interval
for (s in data$steps) {
if (is.na(s)) {
new.steps<-c(new.steps,avg_steps[match(s,data$steps)])
}
else {
new.steps<-c(new.steps,s)
}
}
new.data<-as.data.frame(cbind(new.steps,new.date,new.interval))
all.days<-dimnames(table(new.data$date))[[1]]
new.totals<-c()
for (d in all.days){
tempdf<-new.data[new.data$date==d,]
s<-sum(tempdf$steps)
new.totals<-c(new.totals,s)
}
#...and mean and median!
new.tot_mean<-mean(new.totals)
new.tot_median<-median(new.totals)
table(new.data)
View(new.data)
new.data<-data.frame(new.steps,new.date,new.interval)
colnames(new.data)<-c("steps","date","interval")
all.days<-dimnames(table(new.data$date))[[1]]
new.totals<-c()
for (d in all.days){
tempdf<-new.data[new.data$date==d,]
s<-sum(tempdf$steps)
new.totals<-c(new.totals,s)
}
#...and mean and median!
new.tot_mean<-mean(new.totals)
new.tot_median<-median(new.totals)
barplot(new.totals)
abline(h=new.tot_mean, col="red")
abline(h=new.tot_median, col="blue")
print(tot_mean)
print(tot_median)
print(new.tot_mean)
print(new.tot_median)
tot_mean<-mean(totals)
tot_median<-median(totals)
days<-dimnames(table(comp_data$date))[[1]]
totals<-c()
for (d in days){
tempdf<-comp_data[comp_data$date==d,]
s<-sum(tempdf$steps)
totals<-c(totals,s)
}
tot_mean<-mean(totals)
tot_median<-median(totals)
print(tot_mean)
print(tot_median)
print(new.tot_mean)
print(new.tot_median)
weekday(days)
weekdays(days)
weekdays(data$dates)
weekdays(data$date)
?weekeds
?weekda-s
?weekdays
date<-as.date(data$date)
date<-as.data.frame.Date(data$date)
date
weekdays(date)
weekdays(date$data$date)
weekdays(date$data$date)
View(date)
date<-data$date
weekdays(as.data.frame.Date(date))
date<-as.POSIXct(data$date)
weekdays(date)
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-date in week
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-(date in week)
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-date %in%  week
View(is.weekday)
class(date)
date
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-weekdays(date) %in%  week
View(is.weekday)
head(weekdays(date))
weekdays(date)
weekdays(date)[1000:2000]
date<-as.POSIXct(data$date)
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-weekends(date) %in%  week
date<-as.POSIXct(data$date)
week<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
is.weekday<-weekdays(date) %in%  week
new.avg_steps<-c()
for (i in new.intervals){
tempdf<-new.data[new.data$interval==i,]
s<-mean(tempdf$steps)
new.avg_steps<-c(new.avg_steps,s)
}
new.avg_steps<-c()
for (i in new.interval){
tempdf<-new.data[new.data$interval==i,]
s<-mean(tempdf$steps)
new.avg_steps<-c(new.avg_steps,s)
}
new.avg_steps<-c()
for (i in new.interval){
tempdf<-new.data[new.data$interval==i,]
s<-mean(tempdf$steps)
new.avg_steps<-c(new.avg_steps,s)
}
set.panel(2,1)
plot(new.interval,new.avg_steps[is.weekday],type='l')
plot(new.interval,new.avg_steps[!is.weekday],type='l')
library(fields)
install.packages("fields")
library(fields)
set.panel(2,1)
plot(new.interval,new.avg_steps[is.weekday],type='l')
plot(new.interval,new.avg_steps[!is.weekday],type='l')
set.panel(2,1)
plot(new.interval[is.weekday],new.avg_steps[is.weekday],type='l')
plot(new.interval[!is.weekday],new.avg_steps[!is.weekday],type='l')
sum(is.weekday)
sum(!is.weekday)
length(new.interval[!is.weekday])
set.panel(2,1)
plot(new.interval[is.weekday],new.avg_steps[is.weekday],type='l',xlim=13000)
plot(new.interval[!is.weekday],new.avg_steps[!is.weekday],type='l',xlim=5000)
